# Generated by Django 5.1.2 on 2025-01-16 10:47

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_status', models.CharField(choices=[('J', 'JobSeeker'), ('R', 'Recruiter')], default='J', max_length=1)),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True)),
                ('title', models.CharField(default='default profile', max_length=200)),
                ('bio', models.TextField(blank=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('min_salary', models.FloatField(blank=True, default=0, null=True)),
                ('max_salary', models.FloatField(blank=True, default=0, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_profiles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated', '-created'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-title'],
            },
        ),
        migrations.CreateModel(
            name='JobSeeker',
            fields=[
                ('profile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.profile')),
                ('academics', models.TextField(blank=True, null=True)),
                ('age', models.PositiveIntegerField(blank=True, default=0, null=True)),
            ],
            bases=('base.profile',),
        ),
        migrations.AddField(
            model_name='profile',
            name='skills',
            field=models.ManyToManyField(blank=True, related_name='%(class)s_profiles', to='base.skill'),
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_date', models.DateTimeField(auto_now_add=True)),
                ('match_status', models.CharField(choices=[('P', 'Pending'), ('A', 'Accepted'), ('D', 'Declined'), ('F', 'Failed')], default='P', max_length=1)),
                ('memo', models.TextField(blank=True, null=True)),
                ('job_seeker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.jobseeker')),
            ],
        ),
        migrations.CreateModel(
            name='Recruiter',
            fields=[
                ('profile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.profile')),
                ('company', models.CharField(max_length=255)),
                ('matches', models.ManyToManyField(related_name='recruiters', through='base.Match', to='base.jobseeker')),
            ],
            bases=('base.profile',),
        ),
        migrations.AddField(
            model_name='match',
            name='recruiter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.recruiter'),
        ),
        migrations.AddField(
            model_name='jobseeker',
            name='matches',
            field=models.ManyToManyField(related_name='job_seekers', through='base.Match', to='base.recruiter'),
        ),
    ]
